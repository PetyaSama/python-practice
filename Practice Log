#Practicing the usage of lists

numbers = [3, 7, 5]

while True:
    number = int(input('New number: '))
    if number == 0:
        print("Ending the program")
        break
    numbers.append(number)
    print('Current list of numbers:', numbers)
    for i in numbers:
        print("Numbers multiplied:", i ** 2, i ** 3, i ** 4)

----------------------------------------------------------------------------------------

numbers = []
counter = int(input("Enter the amount of numbers you want to add to the list: "))

for i in range(1, counter + 1):
    numbers.append(i)

print(numbers)

-----------------------------------------------------------------------------------------
# Hypothetical solution to the problem of absence of workers

amount_id = int(input("Enter an amount of workers on working stations: "))
workers_list = []
counter = 0
for _ in range(1, amount_id + 1):
    worker_id = int(input("Worker's ID: "))
    workers_list.append(worker_id)
    counter += 1

missing_id = int(input("Enter an ID that is missing: "))

missing_counter = 0
for id in workers_list:
    if missing_id == id:
        print("The worker is at his/hers working station!")
        break
    else:
        missing_counter += 1

if missing_counter == counter:
    print(missing_id, "- ID of this worker is missing")
print("End of the program")

-----------------------------------------------------------------------------------------
# Looking for the lowest and largest number on the list

nums_list = []

N = int(input('The amount of numbers in the list: '))

for _ in range(N):
    num = int(input("Number: "))
    nums_list.append(num)

maximum = nums_list[0]
minimum = nums_list[0]

for i in range (N):
    if nums_list[i] < minimum:
        minimum = nums_list[i]
    if nums_list[i] > maximum:
        maximum = nums_list[i]

print('The largest number on the list is:', maximum)
print('The lowest number on the list is:', minimum)

-----------------------------------------------------------------------------------------

N = int(input("Enter an amount of numbers in the list: "))
list = []

for _ in range(N):
    num = int(input("Enter a number to be added into the list: "))
    list.append(num)

divider = int(input("Enter a number you wish to divide the numbers in the list with: "))

counter = -1
index_list = []

for i in list:
    counter += 1
    if i % divider == 0:
        index_list.append(counter)

print("Anything")
print("The indexes of the numbers that can be divided by", divider, "are", index_list)
summ = 0
for i_2 in index_list:
    summ += i_2

print("The summary of the indexes is:", summ)

-----------------------------------------------------------------------------------------

N = int(input("Enter an amount of dogs participating in the race: "))
list_of_dogs = []


for i_1 in range (N):
    dog_n = int(input("Enter the dog's position in the race: "))
    list_of_dogs.append(dog_n)

print(list_of_dogs)
print(sorted(list_of_dogs))

-----------------------------------------------------------------------------------------

text = input("Enter a text: ")
text_list = []

for i_1 in text:
    if i_1 != " ":
        text_list.append(i_1)

print(text_list)
amount_sym = 0
replacement = []
replace = input("Enter a symbol you wish to replace: ")
replace_sym = input("Enter a symbol you wish to be in place of this symbol: ")

for i in text_list:
    if i == replace:
        replacement.append(replace_sym)
        amount_sym += 1
    else:
        replacement.append(i)

print(replacement)
print("The amount of letters replaced:", amount_sym)

-----------------------------------------------------------------------------------------

text = input("Enter a text: ")
position = int(input("Enter a position of the letter: "))
position -= 1
text_list = []
count_letters = 0

for i in text:
    text_list.append(i)

for i_1 in text_list:
    if i_1 == text_list[position]:
        count_letters += 1

print("Right next to the letter:", text_list[position], "are letters: ", text_list[position - 1], "and", text_list[position + 1])
print("There are", count_letters, "instances of letter:", text_list[position])


